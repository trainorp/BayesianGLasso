// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// bgl
List bgl(int n, int iters, double lambdaPriorb, double lambdaPosta, arma::mat S, arma::mat Sigma, arma::mat Omega);
RcppExport SEXP _BayesianGLasso_bgl(SEXP nSEXP, SEXP itersSEXP, SEXP lambdaPriorbSEXP, SEXP lambdaPostaSEXP, SEXP SSEXP, SEXP SigmaSEXP, SEXP OmegaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type iters(itersSEXP);
    Rcpp::traits::input_parameter< double >::type lambdaPriorb(lambdaPriorbSEXP);
    Rcpp::traits::input_parameter< double >::type lambdaPosta(lambdaPostaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type S(SSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Sigma(SigmaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Omega(OmegaSEXP);
    rcpp_result_gen = Rcpp::wrap(bgl(n, iters, lambdaPriorb, lambdaPosta, S, Sigma, Omega));
    return rcpp_result_gen;
END_RCPP
}
// bAdgl
List bAdgl(int n, int iters, double gammaPriors, double gammaPriort, double lambdaii, arma::mat S, arma::mat Sigma, arma::mat Omega, bool priorLogical, arma::mat priorHyper);
RcppExport SEXP _BayesianGLasso_bAdgl(SEXP nSEXP, SEXP itersSEXP, SEXP gammaPriorsSEXP, SEXP gammaPriortSEXP, SEXP lambdaiiSEXP, SEXP SSEXP, SEXP SigmaSEXP, SEXP OmegaSEXP, SEXP priorLogicalSEXP, SEXP priorHyperSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type iters(itersSEXP);
    Rcpp::traits::input_parameter< double >::type gammaPriors(gammaPriorsSEXP);
    Rcpp::traits::input_parameter< double >::type gammaPriort(gammaPriortSEXP);
    Rcpp::traits::input_parameter< double >::type lambdaii(lambdaiiSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type S(SSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Sigma(SigmaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Omega(OmegaSEXP);
    Rcpp::traits::input_parameter< bool >::type priorLogical(priorLogicalSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type priorHyper(priorHyperSEXP);
    rcpp_result_gen = Rcpp::wrap(bAdgl(n, iters, gammaPriors, gammaPriort, lambdaii, S, Sigma, Omega, priorLogical, priorHyper));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_BayesianGLasso_bgl", (DL_FUNC) &_BayesianGLasso_bgl, 7},
    {"_BayesianGLasso_bAdgl", (DL_FUNC) &_BayesianGLasso_bAdgl, 10},
    {NULL, NULL, 0}
};

RcppExport void R_init_BayesianGLasso(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
